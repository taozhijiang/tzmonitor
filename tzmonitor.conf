//      LOG_EMERG       0       /* system is unusable */
//	LOG_ALERT	1	/* action must be taken immediately */
//	LOG_CRIT	2	/* critical conditions */
//	LOG_ERR		3	/* error conditions */
//	LOG_WARNING	4	/* warning conditions */
//	LOG_NOTICE	5	/* normal but significant condition */
//	LOG_INFO	6	/* informational */
//	LOG_DEBUG	7	/* debug-level messages */
log_level=7;

version = "1.1.0";

// Network Server Setting
rpc_network = {

    bind_addr = "0.0.0.0";
    serv_addr = "127.0.0.1";    // 该配置地址供客户端使用
    listen_port = 8435;
    safe_ip = "";               // [D] 客户端访问白名单
    backlog_size = 10;


    io_thread_pool_size = 5;    // 工作线程组数目
    session_cancel_time_out = 60; // [D] 会话超时的时间
    ops_cancel_time_out = 10;   // [D] 异步IO操作超时时间，使用会影响性能(大概20%左右)

    // 流控相关
    service_enable = true;      // [D] 是否允许服务
    service_speed  = 0;         // [D] 每1sec允许服务的数目，0表示不限制

    
    max_msg_size = 0;           // [D] 最大消息体尺寸(不包括Header)

    client_ops_cancel_time_out = 10;  // [D] 客户端同步操作的超时设置
};

// 类似于http的vhost，对每个服务族进行单独设置
rpc_services = (
    {
        instance_name = "MonitorTaskService";
        exec_thread_pool_size = 2;              // [D] 启动默认线程数目
        exec_thread_pool_size_hard = 5;         // [D] 容许突发最大线程数
        exec_thread_pool_step_queue_size = 100; // [D] 默认resize线程组的数目

    }
);

// Business Core 
rpc_business = {

    support_process_task_size = 10; // 服务端最大开辟的额外处理数据线程数目(共享)

    services = (
        {
            // 默认的服务模板
            service_name = "[default]";

            event_linger = 10;      // 多少秒的处理延时，滞后的上报被丢弃
            event_step   = 3;       // 压缩多长时间内的时间段进行统计
            additional_process_queue_size = 5;
            store_type = "mysql";        // mysql, leveldb, redis...
        }
    );

    process_queue_size = 5;         // 服务端内联最大任务处理事件数

    // 数据库连接信息
    mysql = {
        host_addr = "127.0.0.1";
        host_port = 3306;
        username = "root";
        passwd = "1234";
        database = "bankpay";
        table_prefix = "t_tzmonitor";
        conn_pool_size = 30;
    };


};

// 客户端配置信息
rpc_monitor_client = {

    serv_addr = "127.0.0.1";
    listen_port = 8435;

    report_enabled = true;      // 是否执行数据收集和服务端上报，关闭后对业务零负载
    report_queue_size = 0;      // 待提交队列超过多长后，进行旧数据的truncate丢弃，0为没有限制
    size_per_report = 200;      // 单个提交请求最多的事件数目，值大的时候可以提高吞吐量，
                                // 但是也要考虑RPC最大报文负载

    additional_report_queue_size = 5;      // 超过该限额会增加并发提交线程数
    support_report_task_size = 2;      // 额外增加的线程数
};
